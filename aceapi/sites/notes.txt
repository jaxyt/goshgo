<div id="ajax-inline-submit">
    <form action="{% url 'posts:like-post-view' %}" method="POST" class='like-form' id='{{obj.id}}'>
        {% csrf_token %}
        <input type="hidden" name="post_id" value={{obj.id}}>

            <button type="submit" class="ui button like-btn{{obj.id}}">
                {% if profile not in obj.liked.all %}
                    Like
                {% else %}
                    Unlike
                {% endif %}
            </button>
            <div class="ui grid">
                <div class="column">
                    <div class="like-count{{obj.id}}"> {{obj.num_likes}} </div>
                </div>
                <div class="column">
                    likes
                </div>
            </div>
    </form>
</div>



$( document ).ready(function() {


    $('.like-form').submit(function(e){
        e.preventDefault()

        const post_id = $(this).attr('id')

        const likeText = $(`.like-btn${post_id}`).text()
        const trim = $.trim(likeText)

        const url = $(this).attr('action')

        let res;
        const likes = $(`.like-count${post_id}`).text()
        const trimCount = parseInt(likes)

        $.ajax({
            type: 'POST',
            url: url,
            data: {
                'csrfmiddlewaretoken': $('input[name=csrfmiddlewaretoken]').val(),
                'post_id':post_id,
            },
            success: function(response) {
                if(trim === 'Unlike') {
                    $(`.like-btn${post_id}`).text('Like')
                    res = trimCount - 1
                } else {
                    $(`.like-btn${post_id}`).text('Unlike')
                    res = trimCount + 1
                }

                $(`.like-count${post_id}`).text(res)
            },
            error: function(response) {
                console.log('error', response)
            }
        })

    })
});




@login_required
def like_unlike_post(request):
    user = request.user
    if request.method == 'POST':
        post_id = request.POST.get('post_id')
        post_obj = Post.objects.get(id=post_id)
        profile = Profile.objects.get(user=user)

        if profile in post_obj.liked.all():
            post_obj.liked.remove(profile)
        else:
            post_obj.liked.add(profile)

        like, created = Like.objects.get_or_create(user=profile, post_id=post_id)

        if not created:
            if like.value=='Like':
                like.value='Unlike'
            else:
                like.value='Like'
        else:
            like.value='Like'

            post_obj.save()
            like.save()

        # data = {
        #     'value': like.value,
        #     'likes': post_obj.liked.all().count()
        # }

        # return JsonResponse(data, safe=False)
    return redirect('posts:main-post-view')
